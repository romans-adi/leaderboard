(()=>{"use strict";const e=(e,t)=>{t.innerHTML="",e.forEach((e=>{const o=document.createElement("li");o.classList.add("py-2","px-4"),o.append(document.createTextNode(`${e.user} : ${e.score}`)),t.append(o)}))},t=()=>{const e=localStorage.getItem("scores");return e?JSON.parse(e):[]},o=e=>{const o=t()||[];o.push(e),localStorage.setItem("scores",JSON.stringify(o))},s=async s=>{try{localStorage.removeItem("scores");const r=await fetch("https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/zKoPy5dluJN9ghN7v3i1/scores/",{headers:{Accept:"application/json","Content-Type":"application/json"}});if(!r.ok)throw new Error("Failed to fetch scores from API");{const n=(await r.json()).result.sort(((e,t)=>t.score-e.score));e(n,s),(async()=>{try{const e=await fetch("https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/zKoPy5dluJN9ghN7v3i1/scores/");if(e.ok){const s=(await e.json()).result,r=t(),n=r.filter((e=>!s.some((t=>t.user===e.name&&t.score===e.score))));if(n.length>0){if(!(await fetch("https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/zKoPy5dluJN9ghN7v3i1/scores/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(n)})).ok)throw new Error("Failed to sync scores to the server.");{const e=r.filter((e=>!n.some((t=>t.name===e.name&&t.score===e.score))));o(e)}}return s}return t()}catch(e){return t()}})()}}catch(o){const r=t().sort(((e,t)=>t.score-e.score));e(r,s)}},r=document.querySelector("#input-user"),n=document.querySelector("#input-score"),c=document.querySelector(".error-container"),a=(e,t=3e3)=>{c.innerHTML="";const o=document.createElement("span");o.textContent=e,o.classList.add("font-bold","red"),c.appendChild(o),setTimeout((()=>{o.style.opacity="0",o.style.transition="opacity 0.3s",setTimeout((()=>{o.remove()}),500)}),t)},i=document.querySelector("#refresh"),l=document.querySelector("#player-data"),d=document.querySelector(".scoreboard");s(d),i.addEventListener("click",(()=>s(d))),l.addEventListener("submit",(async e=>{e.preventDefault();const t=r.value.trim(),s=parseInt(n.value.trim(),10);if(""===t||Number.isNaN(s))a("Please enter a valid name and score");else try{const e=await fetch("https://us-central1-js-capstone-backend.cloudfunctions.net/api/games/zKoPy5dluJN9ghN7v3i1/scores/",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({user:t,score:s})});if(!e.ok){const t=await e.json();throw new Error(`Failed to add score: ${t.error}`)}r.value="",n.value="",o({name:t,score:s})}catch(e){a(`Error adding score: ${e.message}`),o({name:t,score:s})}}))})();